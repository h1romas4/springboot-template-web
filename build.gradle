buildscript {
	repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.8.RELEASE'
        classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'

/**
 * for JDK
 */
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

/**
 * for node.js & webpack
 */
node {
    version = '10.16.3'
    download = true
}
task watch(dependsOn: ['npm_run_watch'])
task webpack(dependsOn: ['npm_run_webpack'])
task start(dependsOn: ['npm_run_start'])

/**
 * for DOMA2
 */
apply from:'ide.gradle'

task copyDomaResources(type: Sync)  {
    from sourceSets.main.resources.srcDirs
    into compileJava.destinationDir
    include 'doma.compile.config'
    include 'META-INF/**/*.sql'
    include 'META-INF/**/*.script'
}
compileJava {
    dependsOn copyDomaResources
}
compileTestJava {
    options.compilerArgs = ['-proc:none']
}

/**
 * for heroku deploy
 */
task stage(dependsOn: ['webpack', 'clean', 'build'])
build.mustRunAfter clean

/**
 * for Spring Boot
 */
bootRun {
    sourceResources sourceSets.main
}

repositories {
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.1'
    implementation 'org.springframework.boot:spring-boot-devtools'
    runtime 'org.flywaydb:flyway-core'
    runtime 'com.h2database:h2:1.4.199'
    runtime 'org.postgresql:postgresql:42.2.8'
    annotationProcessor 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.1'
}

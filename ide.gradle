/**
 * for Eclipse and Visual Studio Code
 */
apply plugin: 'eclipse'

ext { aptDir='.apt_generated' }

eclipse {
    jdt.file.withProperties { it['org.eclipse.jdt.core.compiler.processAnnotations'] = 'enabled' }
    classpath {
        defaultOutputDir = file('build/classes/java/main')
        // after Gradle 4.4
        // https://github.com/gradle/gradle/issues/3825
        file.whenMerged {
            entries.each { source ->
                if (source.kind == 'src' && source.toString().contains('output')) {
                    source.output = 'build/classes/java/main'
                }
            }
        }
    }
}

eclipseJdt {
    def clos = []

    def fp = file('.factorypath')
    outputs.file fp
    clos += {
        fp.withWriter {
            def domaJar = configurations.compile.find {
                it.name.startsWith('doma-2')
            }
            new groovy.xml.MarkupBuilder(it).factorypath() {
                factorypathentry(kind:'EXTJAR', id:domaJar, enabled:true, runInBatchMode:false)
            }
        }
    }

    def prefs = { name, contents ->
        def f = file(".settings/$name")
        clos += {
            f.text = contents.stripMargin()
        }
        outputs.file f
    }

    prefs 'org.eclipse.jdt.apt.core.prefs', """\
        |eclipse.preferences.version=1
        |org.eclipse.jdt.apt.aptEnabled=true
        |org.eclipse.jdt.apt.genSrcDir=${aptDir}
        |org.eclipse.jdt.apt.reconcileEnabled=true
        |"""

    doLast { clos*.run() }
}

task eclipseSettings(type: Copy) {
    from rootProject.files("eclipse/org.eclipse.jdt.ui.prefs")
    into project.file('.settings/')
    outputs.upToDateWhen { false }
}

task eclipseJdtPrepare(type: Copy) {
    from rootProject.file("eclipse/org.eclipse.jdt.core.prefs")
    into project.file(".settings/")
    outputs.upToDateWhen { false }
}

task cleanEclipseJdtUi(type: Delete) {
    delete project.file(".settings/org.eclipse.jdt.ui.prefs")
    delete project.file(".settings/org.eclipse.jdt.core.prefs")
}

tasks["eclipseJdt"].dependsOn(eclipseJdtPrepare)
tasks["cleanEclipse"].dependsOn(cleanEclipseJdtUi)
tasks["eclipse"].dependsOn(eclipseSettings)
